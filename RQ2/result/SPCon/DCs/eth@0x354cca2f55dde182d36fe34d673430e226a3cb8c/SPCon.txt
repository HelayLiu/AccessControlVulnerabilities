Traceback (most recent call last):
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 529, in _run_solc
    ret: Dict = json.loads(stdout)
  File "../anaconda3/envs/spcon/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "../anaconda3/envs/spcon/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "../anaconda3/envs/spcon/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/slither/slither.py", line 86, in __init__
    crytic_compile = CryticCompile(target, **kwargs)
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/crytic_compile/crytic_compile.py", line 117, in __init__
    self._compile(**kwargs)
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/crytic_compile/crytic_compile.py", line 548, in _compile
    self._platform.compile(self, **kwargs)
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 153, in compile
    targets_json = _get_targets_json(compilation_unit, self._target, **kwargs)
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 275, in _get_targets_json
    return _run_solc(
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/crytic_compile/platform/solc.py", line 533, in _run_solc
    raise InvalidCompilation(f"Invalid solc compilation {stderr}")
crytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation Error: Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.
    --> ../ac_datasets/realword/eth@0x354cca2f55dde182d36fe34d673430e226a3cb8c/source_code/MainContractFlattened.sol:1045:52:
     |
1045 |         bool success = verify(address(this), user, inToken, outToken, _nonce, amount, feeAmount, _isWrapped, srcId, dstId, r, s, v);
     |                                                    ^^^^^^^



During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "../SpCon/spcon/__main__.py", line 73, in main
    execute_command(args)
  File "../SpCon/spcon/__main__.py", line 27, in execute_command
    contractName, contractAbi, reads, reads2, writes =  getRWofContract(address=args.eth_address, network=args.network)
  File "../SpCon/spcon/staticAnalyzer.py", line 25, in getRWofContract
    contractName, contractAbi, reads, reads2,  writes = analyzer.analyze(address=address, network=network)
  File "../SpCon/spcon/staticAnalyzer.py", line 69, in analyze
    slither = Slither(file_path)
  File "../anaconda3/envs/spcon/lib/python3.8/site-packages/slither/slither.py", line 90, in __init__
    raise SlitherError(f"Invalid compilation: \n{str(e)}")
slither.exceptions.SlitherError: Invalid compilation: 
Invalid solc compilation Error: Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.
    --> ../ac_datasets/realword/eth@0x354cca2f55dde182d36fe34d673430e226a3cb8c/source_code/MainContractFlattened.sol:1045:52:
     |
1045 |         bool success = verify(address(this), user, inToken, outToken, _nonce, amount, feeAmount, _isWrapped, srcId, dstId, r, s, v);
     |                                                    ^^^^^^^


