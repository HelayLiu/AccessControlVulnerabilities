1. Function deposit(uint256 visrDeposit, address payable from, address to) (line 40-75) has access control issues. Reason: The function allows any user to call it and perform deposits, but it does not check if the caller is authorized to perform actions on behalf of the `from` address when it is a contract. This could lead to unauthorized transfers if a malicious contract is able to call this function.

2. Function withdraw(uint256 shares, address to, address payable from) (line 78-102) has access control issues. Reason: Similar to the deposit function, this function allows any user to call it and withdraw rewards. It checks if the `from` address is the caller or if the caller is the owner of the `from` address, but it does not ensure that the caller has the right to withdraw on behalf of the `from` address. This could lead to unauthorized withdrawals if a malicious contract is able to call this function.

3. Function transferOwnership(address newOwner) (line 106-109) has access control issues. Reason: The function allows the current owner to transfer ownership to any address, but it does not check if the new owner is a valid address (e.g., not zero address). This could lead to loss of ownership if the new owner is set to an invalid address.

4. Function transferTokenOwnership(address newOwner) (line 112-115) has access control issues. Reason: Similar to the transferOwnership function, this function allows the current owner to transfer ownership of the `vvisr` contract to any address without checking if the new owner is a valid address. This could also lead to loss of ownership if the new owner is set to an invalid address.